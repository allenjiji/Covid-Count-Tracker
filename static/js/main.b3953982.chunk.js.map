{"version":3,"sources":["components/Header.js","components/IndiaDashboard.js","components/WorldDetails.js","components/IndiaDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","IndiaDashboard","useState","total_counts","setTotal_counts","useEffect","axios","get","then","response","total_cases","data","cases","active_cases","active","recovered","deaths","todayDeaths","todayRecovered","todayCases","critical","Card","style","width","Body","Title","Subtitle","WorldDetails","setData","console","log","Table","striped","bordered","hover","variant","map","item","index","country","IndiaDetails","state_keys","Object","keys","Accordion","districts_info","districtData","district_keys","total","dist","confirmed","deceased","as","Button","eventKey","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3953982.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nfunction Header() {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"\">COVID-19 DashBoard</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto menu\">\r\n                    <Link className=\"nav-link\" to=\"/india\">India</Link>\r\n                    <Link className=\"nav-link\" to=\"/world\">World</Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nfunction IndiaDashboard() {\r\n    const [total_counts, setTotal_counts] = useState({})\r\n    useEffect(() => {\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then((response) => {\r\n            setTotal_counts({\r\n                ...total_counts,\r\n                total_cases: response.data.cases,\r\n                active_cases: response.data.active,\r\n                recovered: response.data.recovered,\r\n                deaths: response.data.deaths,\r\n                todayDeaths: response.data.todayDeaths,\r\n                todayRecovered: response.data.todayRecovered,\r\n                todayCases: response.data.todayCases,\r\n                critical:response.data.critical\r\n\r\n            })\r\n        })\r\n\r\n    }, [])\r\n    // console.log(total_counts);\r\n    return (\r\n        <div className=\"india-dashboard row\">\r\n            {/* <div className=\"row text-center\" >\r\n                <div className=\"col-md-12\">\r\n                    <img alt=\"FlagImagNoteAvailable\" src=\"https://www.countryflags.io/in/shiny/64.png\" />\r\n                </div>\r\n            </div> */}\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"badge\" bg=\"primary\" style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>Total Cases</Card.Title>\r\n                        <h1>{total_counts.total_cases}</h1>\r\n                        <Card.Subtitle className=\"mb-2\">Today:{total_counts.todayCases}</Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"badge\" bg=\"warning\" style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>Active Cases</Card.Title>\r\n                        <h1>{total_counts.active_cases}</h1>\r\n                        <Card.Subtitle className=\"mb-2\">Critical: {total_counts.critical}</Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"badge\" bg=\"success\" style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>Recovered</Card.Title>\r\n                        <h1>{total_counts.recovered}</h1>\r\n\r\n                        <Card.Subtitle className=\"mb-2\">Today:{total_counts.todayRecovered}</Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <Card className=\"badge\" bg=\"danger\" style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>Deaths</Card.Title>\r\n                        <h1>{total_counts.deaths}</h1>\r\n\r\n                        <Card.Subtitle className=\"mb-2\">Today:{total_counts.todayRecovered}</Card.Subtitle>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaDashboard\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nfunction WorldDetails() {\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n        axios.get('https://corona.lmao.ninja/v2/countries').then(\r\n            (response) => {\r\n                setData(response.data)\r\n                console.log(response.data[0]);\r\n            }\r\n        )\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center p-4\">Covid-19 over the Globe</h1>\r\n            <Table striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Country</th>\r\n                        <th>Cases</th>\r\n                        <th>Active</th>\r\n                        <th>Deaths</th>\r\n                        <th>Recovered</th>\r\n                        <th>Critical</th>\r\n\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map((item, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.country}</td>\r\n                                    <td>{item.cases}</td>\r\n                                    <td>{item.active}</td>\r\n                                    <td>{item.deaths}</td>\r\n                                    <td>{item.recovered}</td>\r\n                                    <td>{item.critical}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Accordion, Card, Button, Table } from 'react-bootstrap'\r\n\r\nfunction IndiaDetails() {\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.covid19india.org/state_district_wise.json').then((response) => {\r\n            setData(response.data);\r\n        });\r\n    }, [])\r\n\r\n    //console.log(data);\r\n    let state_keys = Object.keys(data)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Accordion>\r\n                {\r\n                    state_keys.map((item, index) => {\r\n                        let districts_info = data[item].districtData;\r\n                        let district_keys = Object.keys(districts_info)\r\n                        let total = { 'confirmed': 0, 'active': 0, 'deceased': 0, 'recovered': 0 }\r\n                        district_keys.map((dist, index) => {\r\n                            total['confirmed'] += data[item].districtData[dist].confirmed;\r\n                            total['active'] += data[item].districtData[dist].active;\r\n                            total['deceased'] += data[item].districtData[dist].deceased;\r\n                            total['recovered'] += data[item].districtData[dist].recovered;\r\n                            return null\r\n                        })\r\n                        return (\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"\" eventKey={index}>\r\n                                        <span><b>{item}</b> &nbsp; | &nbsp; Confirmed:{total.confirmed} &nbsp; | &nbsp; Active:{total.active} &nbsp; | &nbsp; Deceased:{total.deceased} &nbsp; | &nbsp;  Recovered:{total.recovered}</span>\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey={index}>\r\n                                    <Card.Body>\r\n                                        <Table striped bordered hover variant=\"dark\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>District</th>\r\n                                                    <th>Confirmed</th>\r\n                                                    <th>Active</th>\r\n                                                    <th>Deceased</th>\r\n                                                    <th>Recovered</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {district_keys.map((dist, index) => {\r\n                                                    return (\r\n                                                        <tr>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{dist}</td>\r\n                                                            <td>{data[item].districtData[dist].confirmed}</td>\r\n                                                            <td>{data[item].districtData[dist].active}</td>\r\n                                                            <td>{data[item].districtData[dist].deceased}</td>\r\n                                                            <td>{data[item].districtData[dist].recovered}</td>\r\n\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>)\r\n                    })\r\n                }\r\n\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndiaDetails\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport IndiaDashboard from './components/IndiaDashboard';\nimport WorldDetails from './components/WorldDetails';\nimport IndiaDetails from './components/IndiaDetails';\nfunction App() {\n  return (\n\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path='/'>\n          <>\n            <IndiaDashboard />\n            <IndiaDetails />\n          </>\n        </Route>\n        <Route path='/india'>\n          <>\n            <IndiaDashboard />\n            <IndiaDetails />\n          </>\n        </Route>\n        <Route path='/world'>\n          <WorldDetails />\n        </Route>\n      </Switch>\n    </Router >\n\n  );\n}\n\nexport default App;\n\n//Header\n//India Page\n    //India DAshboard\n    //State counts\n//World Page","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}